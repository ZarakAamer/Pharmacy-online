# Generated by Django 4.2 on 2024-06-01 11:12

import ckeditor_uploader.fields
import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('address_en', models.CharField(blank=True, max_length=300, null=True)),
                ('address_ar', models.CharField(blank=True, max_length=300, null=True)),
                ('address_fr', models.CharField(blank=True, max_length=300, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description_ar', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('description_fr', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
            ],
            options={
                'verbose_name': 'Aboutus',
                'verbose_name_plural': 'About Us',
                'db_table': 'about_us_db',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=300, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'addresses_db',
            },
        ),
        migrations.CreateModel(
            name='Advices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='advices')),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_en', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_ar', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_fr', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_ar', models.TextField(null=True)),
                ('description_fr', models.TextField(null=True)),
                ('advice', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('advice_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('advice_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('advice_fr', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Advice',
                'verbose_name_plural': 'Advices',
                'db_table': 'advices_db',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', ckeditor_uploader.fields.RichTextUploadingField()),
                ('instructions_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('instructions_ar', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('instructions_fr', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('account_info', ckeditor_uploader.fields.RichTextUploadingField()),
                ('account_info_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('account_info_ar', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('account_info_fr', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
                'db_table': 'banks_db',
            },
        ),
        migrations.CreateModel(
            name='BigBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='big_banners.jpg', upload_to='big_banners')),
                ('name', models.CharField(default='Skin Care', max_length=50)),
                ('name_en', models.CharField(default='Skin Care', max_length=50, null=True)),
                ('name_ar', models.CharField(default='Skin Care', max_length=50, null=True)),
                ('name_fr', models.CharField(default='Skin Care', max_length=50, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('user_catcher', models.CharField(default='Big discount', max_length=50)),
                ('user_catcher_en', models.CharField(default='Big discount', max_length=50, null=True)),
                ('user_catcher_ar', models.CharField(default='Big discount', max_length=50, null=True)),
                ('user_catcher_fr', models.CharField(default='Big discount', max_length=50, null=True)),
                ('short_line', models.CharField(default='Save 80 percent on all products flat', max_length=100)),
                ('short_line_en', models.CharField(default='Save 80 percent on all products flat', max_length=100, null=True)),
                ('short_line_ar', models.CharField(default='Save 80 percent on all products flat', max_length=100, null=True)),
                ('short_line_fr', models.CharField(default='Save 80 percent on all products flat', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Big Banner',
                'verbose_name_plural': 'Big Banners',
                'db_table': 'big_bunners_db',
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Cart Order',
                'verbose_name_plural': 'Cart Orders',
                'db_table': 'cart_orders_db',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('title_fr', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'categories_db',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon', models.CharField(max_length=20)),
                ('percentage', models.PositiveIntegerField()),
                ('available', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Coupon',
                'verbose_name_plural': 'Coupons',
                'db_table': 'coupons_db',
                'ordering': ['coupon'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('name_en', models.CharField(max_length=70, null=True)),
                ('name_ar', models.CharField(max_length=70, null=True)),
                ('name_fr', models.CharField(max_length=70, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('details_en', models.TextField(blank=True, null=True)),
                ('details_ar', models.TextField(blank=True, null=True)),
                ('details_fr', models.TextField(blank=True, null=True)),
                ('specialty', models.CharField(max_length=200)),
                ('specialty_en', models.CharField(max_length=200, null=True)),
                ('specialty_ar', models.CharField(max_length=200, null=True)),
                ('specialty_fr', models.CharField(max_length=200, null=True)),
                ('number', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='Doctors')),
                ('timing', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'db_table': 'doctors_db',
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('subject_en', models.CharField(max_length=200, null=True)),
                ('subject_ar', models.CharField(max_length=200, null=True)),
                ('subject_fr', models.CharField(max_length=200, null=True)),
                ('prescription', models.ImageField(upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_en', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_ar', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_fr', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('company', models.CharField(choices=[('1', 'الشركة التعاونية للتأمين')], max_length=200)),
                ('company_en', models.CharField(choices=[('1', 'الشركة التعاونية للتأمين')], max_length=200, null=True)),
                ('company_ar', models.CharField(choices=[('1', 'الشركة التعاونية للتأمين')], max_length=200, null=True)),
                ('company_fr', models.CharField(choices=[('1', 'الشركة التعاونية للتأمين')], max_length=200, null=True)),
                ('insurance_card', models.ImageField(upload_to=core.models.PathAndRename('insurances'))),
                ('insurance_card_en', models.ImageField(null=True, upload_to=core.models.PathAndRename('insurances'))),
                ('insurance_card_ar', models.ImageField(null=True, upload_to=core.models.PathAndRename('insurances'))),
                ('insurance_card_fr', models.ImageField(null=True, upload_to=core.models.PathAndRename('insurances'))),
                ('done', models.BooleanField(default=False, verbose_name='done')),
                ('done_en', models.BooleanField(default=False, verbose_name='done')),
                ('done_ar', models.BooleanField(default=False, verbose_name='done')),
                ('done_fr', models.BooleanField(default=False, verbose_name='done')),
            ],
            options={
                'verbose_name': 'Insurance',
                'verbose_name_plural': 'Insurances',
                'db_table': 'insurances_db',
            },
        ),
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_en', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_ar', models.CharField(blank=True, max_length=300, null=True)),
                ('city_name_fr', models.CharField(blank=True, max_length=300, null=True)),
                ('map_iframe', models.CharField(max_length=2000)),
                ('details', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('details_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('details_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('details_fr', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations_db',
            },
        ),
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('title_fr', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='maincategory')),
            ],
            options={
                'verbose_name': 'Main Category',
                'verbose_name_plural': 'Main Categories',
                'db_table': 'main_categories_db',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('paid_status', models.BooleanField(blank=True, default=False, null=True)),
                ('cod', models.BooleanField(blank=True, default=False, null=True)),
                ('payment_type', models.CharField(max_length=50)),
                ('order_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('bank_invoice', models.ImageField(blank=True, upload_to=core.models.PathAndRename('bank_invoices/'))),
                ('product_status', models.CharField(choices=[('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='processing', max_length=30)),
                ('invoice_id', models.CharField(default='', max_length=20)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('title_fr', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='product.jpg', upload_to='ProductImages')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('description_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('description_fr', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='This is the product', null=True)),
                ('price', models.PositiveIntegerField()),
                ('old_price', models.PositiveIntegerField(blank=True, null=True)),
                ('specifications', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('specifications_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('specifications_ar', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('specifications_fr', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('stock_count', models.IntegerField(default=100)),
                ('in_stock', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('is_prescription', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField()),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='core.category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products_db',
            },
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(default=500)),
            ],
            options={
                'verbose_name': 'Shipping Price',
                'verbose_name_plural': 'Shipping Prices',
                'db_table': 'shipping_prices_db',
            },
        ),
        migrations.CreateModel(
            name='SideBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='side_banners.jpg', upload_to='side_banners')),
                ('type', models.CharField(default='organic', max_length=50)),
                ('type_en', models.CharField(default='organic', max_length=50, null=True)),
                ('type_ar', models.CharField(default='organic', max_length=50, null=True)),
                ('type_fr', models.CharField(default='organic', max_length=50, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('user_catcher', models.CharField(default='discounts no all products', max_length=50)),
                ('user_catcher_en', models.CharField(default='discounts no all products', max_length=50, null=True)),
                ('user_catcher_ar', models.CharField(default='discounts no all products', max_length=50, null=True)),
                ('user_catcher_fr', models.CharField(default='discounts no all products', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Side Banner',
                'verbose_name_plural': 'Side Banners',
                'db_table': 'side_bunners_db',
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wishes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Whishlist',
                'verbose_name_plural': 'Whishlists',
                'db_table': 'wishlists_db',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('title_en', models.CharField(default='', max_length=100, null=True)),
                ('title_ar', models.CharField(default='', max_length=100, null=True)),
                ('title_fr', models.CharField(default='', max_length=100, null=True)),
                ('image', models.ImageField(default='category.jpg', upload_to='subcategory')),
                ('main_cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcats', to='core.maincategory')),
            ],
            options={
                'verbose_name': 'Sub Category',
                'verbose_name_plural': 'Sub Categories',
                'db_table': 'sub_categories_db',
            },
        ),
        migrations.CreateModel(
            name='SpecialTimeOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
            options={
                'verbose_name': 'Special Time Offer',
                'verbose_name_plural': 'Special Time Offers',
                'db_table': 'special_time_offers_db',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='core.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
                'db_table': 'product_reviews_db',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='product.jpg', upload_to='product-images')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p_images', to='core.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'db_table': 'product_images_db',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('subject_en', models.CharField(max_length=200, null=True)),
                ('subject_ar', models.CharField(max_length=200, null=True)),
                ('subject_fr', models.CharField(max_length=200, null=True)),
                ('prescription', models.ImageField(upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_en', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_ar', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('prescription_fr', models.ImageField(null=True, upload_to=core.models.PathAndRename('prescriptions/'))),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'db_table': 'prescriptions_db',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='core.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='in_order_products', to='core.product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_items_db',
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('subject_en', models.CharField(max_length=200, null=True)),
                ('subject_ar', models.CharField(max_length=200, null=True)),
                ('subject_fr', models.CharField(max_length=200, null=True)),
                ('prescription', models.ImageField(upload_to=core.models.PathAndRename('prescriptions/'))),
                ('content', models.TextField()),
                ('content_en', models.TextField(null=True)),
                ('content_ar', models.TextField(null=True)),
                ('content_fr', models.TextField(null=True)),
                ('bank_invoice', models.ImageField(blank=True, upload_to=core.models.PathAndRename('bank_invoices/'))),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.doctor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'db_table': 'consultations_db',
            },
        ),
        migrations.AddField(
            model_name='category',
            name='sub_cat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='core.subcategory'),
        ),
        migrations.CreateModel(
            name='CartOrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('price', models.PositiveIntegerField(blank=True, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='core.cartorder')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='in_cart_products', to='core.product')),
            ],
            options={
                'verbose_name': 'Cart Order Item',
                'verbose_name_plural': 'Cart Order Items',
                'db_table': 'cart_order_items_db',
            },
        ),
        migrations.AddField(
            model_name='cartorder',
            name='coupon',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.coupon'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL),
        ),
    ]
